---
  - name: do
    hosts: localhost
    gather_facts: no
    connection: local
    vars_files:
      - vault.yml
    tasks:
    - name: create a new droplet
      digital_ocean_droplet:
        state: present
        name: etsmith-ansible-demo
        oauth_token: "{{ oauth_token }}"
        size: s-1vcpu-1gb
        region: nyc1
        image: centos-7-x64
        wait_timeout: 500
        ssh_keys: 31320166
      register: my_droplet

    - name: set_fact for droplet IP
      set_fact:
        r_droplet_ip: "{{ my_droplet.data.droplet.id }}"
        cacheable: yes
      delegate_to: localhost

    - debug:
        msg: "ID is {{ my_droplet.data.droplet.id }}, IP is {{ my_droplet.data.ip_address }}"

    - name: Add droplet to in memory inventory
      add_host:
        name: "{{ my_droplet.data.ip_address }}"
        groups: new-hosts
    
    - name: Pause for droplet creation
      wait_for_connection:
        delay: 45
        sleep: 5
        timeout: 300



  - name: Playbook to Configure
    hosts: new-hosts
    vars:
      ansible_user: root
      ansible_ssh_private_key_file: /Users/etsmith/.ssh/id_rsa
    become: true
    roles: 
      - role: ansible-role-demo-config
        
      - role: hostname 
        hostname: webserver.eos.com

      - role: firewalld
        firewalld_zone: public
        firewalld_become: true
        firewalld_services:
          - ssh
          - http
          - https
    tasks:
      - name: Restart httpd
        service:
          name: httpd
          state: restarted

  - name: Check Webserver
    hosts: localhost
    gather_facts: no
    connection: local
    tasks:
      - name: Check webserver endpoint
        uri:
          url: "http://{{ my_droplet.data.ip_address }}"
          return_content: yes
        register: r_url_content

      - name: Print webserver endpoint content
        debug:
          msg: "{{ r_url_content.content }}"

          

